image: Visual Studio 2017

version: 1.0.{build}

branches:
  only:
    - master
    - develop
    - feature/sonarqube
init:
  - git config --global core.autocrlf input

platform: Any CPU

configuration: Debug

before_build:
  - mkdir c:\temp -erroraction silentlycontinue;
  - nuget restore ArgParser/ArgParser.sln

build:
  parallel: true
  project: ArgParser/ArgParser.sln
  verbosity: minimal

test:
  assemblies:
    - '**\*.Test.dll'
    - '**\*.Tests.dll'

test_script:
- ps: >-
    Write-Host -ForegroundColor Green "TESTING...";
    $xunitexe = "C:\projects\arg-parser\ArgParser\packages\xunit.runner.console.2.4.1\tools\net472\xunit.console.exe";
    $targetargs = "-targetargs:C:\projects\arg-parser\ArgParser\ArgParser.Core.Test\bin\Debug\ArgParser.Core.Test.dll C:\projects\arg-parser\ArgParser\ArgParser.Styles.Test\bin\Debug\ArgParser.Styles.Test.dll C:\projects\arg-parser\ArgParser\ArgParser.Styles.Alba.Test\bin\Debug\ArgParser.Styles.Alba.Test.dll -noshadow";
    $coveragefile = "c:\temp\coverage.xml";
    $filter = "+[ArgParser*]*";
    iex "C:\projects\arg-parser\ArgParser\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -target:$xunitexe ""$targetargs"" -output:$coveragefile -filter:""$filter"" -coverbytest:*Test.dll";
    iex "C:\projects\arg-parser\ArgParser\packages\coveralls.io.1.4.2\tools\coveralls.net.exe --opencover c:\temp\coverage.xml -r $env:COVERALLS_REPO_TOKEN";

after_test:
- ps: >-
    Write-Host -ForegroundColor Green "ANALYZING..."; 
    $coveragefile = "c:\temp\coverage.xml"; 
    $url = "https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/4.4.2.1543/sonar-scanner-msbuild-4.4.2.1543-net46.zip"; 
    $zip = "C:\temp\sonar.zip"; 
    $sonardir = "C:\temp\sonar\"; 
    $sonarexe = "C:\temp\sonar\SonarScanner.MSBuild.exe"; 
    $sonardir = "C:\temp\sonar\";
    $sln = "C:\projects\arg-parser\ArgParser\ArgParser.sln";
    $exe = "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\amd64\MSBuild.exe";

    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; 
    $client = New-Object System.Net.WebClient; 
    $client.DownloadFile($url, $zip);
    Expand-Archive -LiteralPath $zip -DestinationPath $sonardir; 
    iex "$sonarexe begin /k:""tysmithnet_arg-parser"" /d:""sonar.host.url=https://sonarqube.com"" /d:sonar.cs.opencover.reportsPaths=""$coveragefile"" /d:sonar.login=""$env:SONARQUBE_TOKEN"""; 
    & $exe $sln
    iex "$sonarexe end /d:sonar.login=""$env:SONARQUBE_TOKEN"""; 

environment:
  COVERALLS_REPO_TOKEN:
    secure: dxNQXnuBxcyVeQhaepf3P5NWWpP3tz+9j+gvlduwmBaeoIeyuvfMRRA5JFE/omEs
  SONARQUBE_TOKEN:
    secure: uhi+e/iunOSzRs+nYbGcTmGQmaHJJl2S+tiC1mXcCt0/qma3XFoaZKriOetXwxhw